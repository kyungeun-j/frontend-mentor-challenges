[{"/Users/jke/dev/frontend-mentor-challenges/frontend-mentor-challenges/advice-generator-app/src/index.js":"1","/Users/jke/dev/frontend-mentor-challenges/frontend-mentor-challenges/advice-generator-app/src/App.js":"2","/Users/jke/dev/frontend-mentor-challenges/frontend-mentor-challenges/advice-generator-app/src/reportWebVitals.js":"3"},{"size":535,"mtime":1653051321688,"results":"4","hashOfConfig":"5"},{"size":1233,"mtime":1653063789571,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1653051321688,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","suppressedMessages":"10","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"3pt749",{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15"},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"11"},"/Users/jke/dev/frontend-mentor-challenges/frontend-mentor-challenges/advice-generator-app/src/index.js",[],[],[],"/Users/jke/dev/frontend-mentor-challenges/frontend-mentor-challenges/advice-generator-app/src/App.js",["19","20"],[],"import { useEffect, useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\nimport btnImg from './images/icon-dice.svg';\nimport desktopPattern from './images/pattern-divider-desktop.svg';\nimport mobilePattern from './images/pattern-divider-mobile.svg';\n\n\nfunction App() {\n  const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n  const [apiData, setApiData] = useState({\n    id:'', advice:''\n  });\n\n  const getApiData = async() => {\n    return await axios.get('https://api.adviceslip.com/advice')\n      .then(res => {\n        setApiData({\n          id: res.data.slip.id,\n          advice: res.data.slip.advice\n        });\n      });\n  }\n  \n  useEffect(() => {\n    getApiData();\n  }, []);\n\n  useEffect(() => {\n    window.addEventListener('resize', () => setWindowWidth(window.innerWidth));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <main>\n        <section>\n          <h1>ADVICE # { apiData.id }</h1>\n          <div>\"{ apiData.advice }\"</div>\n          <img src={ windowWidth > 599 ? desktopPattern : mobilePattern }></img>\n        </section>\n        <span onClick={ () => getApiData() }>\n          <img src={ btnImg }></img>\n        </span>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/jke/dev/frontend-mentor-challenges/frontend-mentor-challenges/advice-generator-app/src/reportWebVitals.js",[],[],{"ruleId":"21","severity":1,"message":"22","line":39,"column":11,"nodeType":"23","endLine":39,"endColumn":75},{"ruleId":"21","severity":1,"message":"22","line":42,"column":11,"nodeType":"23","endLine":42,"endColumn":31},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]